name: Python Package using Conda

on: 
  push:
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: [zp-nc04]
    strategy:
      max-parallel: 5
    env:
      artifact_name: ""
    steps:
    - name: Checkout code
      run: |
          echo "➡️ 当前目录：$(pwd)"
          if [[ -e ".gitignore" ]]; then
              echo "➡️ 目录已存在:"
              echo "➡️ 拉取最新代码 git pull..."
              git remote set-url origin https://gh-proxy.com/github.com/coddelin/VideoPlayground.git
              #git checkout main
              git pull origin main
          else
              echo "➡️ 项目目录不存在，开始克隆代码仓库"
              git clone https://github.com/coddelin/VideoPlayground.git .
              echo "➡️ 当前目录1：$(pwd)"
              
          fi
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10.11'

    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
    - name: Install edge-tts requests 
      run: |
        python -m pip install --upgrade pip
        pip install edge-tts requests 
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: install FFmpeg
      run: |
        ffmpeg -version
        
    - name: intall fonts
      run: |
        sudo cp -r ./fonts/* /usr/local/share/fonts/
        sudo fc-cache -f -v
        fc-list | grep Noto Serif SC
        
    - name: build
      run: |
        echo "➡️ 工程执行"
        python v0_run_gen_video_work_flow.py
        current_time=$(date +"%Y-%m-%d_%H-%M-%S")
        echo current_time
        echo "artifact_name=out_$current_time" >> $GITHUB_ENV
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        # Artifact name  
        name: ${{ env.artifact_name }} # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: ./out_mp4/ 
        # The desired behavior if no files are found using the provided path.
        # Available Options:
        #   warn: Output a warning but do not fail the action
        #   error: Fail the action with an error message
        #   ignore: Do not output any warnings or errors, the action does not fail
        if-no-files-found: warn # optional, default is warn
        # Duration after which artifact will expire in days. 0 means using default retention.
        # Minimum 1 day. Maximum 90 days unless changed from the repository settings page.
        retention-days: 90 # optional    
        # The level of compression for Zlib to be applied to the artifact archive. The value can range from 0 to 9: - 0: No compression - 1: Best speed - 6: Default compression (same as GNU Gzip) - 9: Best compression Higher levels will result in better compression, but will take longer to complete. For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
        compression-level: 0 # optional, default is 6
        # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.
        overwrite: true # optional, default is false
        # If true, hidden files will be included in the artifact. If false, hidden files will be excluded from the artifact.
        include-hidden-files: false # optional, default is false
          
